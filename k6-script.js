// Auto-generated by the Load Impact converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import URI from "./libs/urijs.js";
import {
  group
} from "k6";

export let options = {
  maxRedirects: 4,
  iterations: "1000",
  vus: 100
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    BASE_URL: "https://test-api.k6.io/"
  }
});

export default function () {
  group("Public APIs", function () {
    postman[Request]({
      name: "List all public crocodiles",
      id: "0d4c1d5a-b731-451b-b72d-7150fbb99e01",
      method: "GET",
      address: "{{BASE_URL}}/public/crocodiles/"
    });

    postman[Request]({
      name: "Get a single public crocodile",
      id: "c6849af3-57cf-49fe-887f-231e26b67b18",
      method: "GET",
      address: "{{BASE_URL}}/public/crocodiles/1/"
    });
  });

  group("Registration and authentication", function () {
    postman[Request]({
      name: "Register a new user",
      id: "7698e07f-2df6-450a-9f93-08daeb02b36e",
      method: "POST",
      address: "{{BASE_URL}}/user/register/",
      data: '{\n    "username": "{{USERNAME}}",\n    "first_name": "{{FIRSTNAME}}",\n    "last_name": "{{LASTNAME}}",\n    "email": "{{EMAIL}}",\n    "password": "{{PASSWORD}}"\n}'
    });

    postman[Request]({
      name: "Bearer/JWT token authentication",
      id: "3ac0c1c4-2501-4c25-956e-c52e8798c220",
      method: "POST",
      address: "{{BASE_URL}}/auth/token/login/",
      data: '{\n    "username": "{{USERNAME}}",\n    "password": "{{PASSWORD}}"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        pm.environment.set("REFRESH", jsonData.refresh);
        pm.environment.set("ACCESS", jsonData.access);
      }
    });
  });

  group("Private APIs", function () {
    postman[Request]({
      name: "List all your crocodiles",
      id: "61fac511-fe16-41aa-833d-58c3d3fd7141",
      method: "GET",
      address: "{{BASE_URL}}/my/crocodiles/",
      pre() {
        const baseUrl = pm.collectionVariables.get("BASE_URL");

        const getTokenRequest = {
          url: baseUrl + "/auth/token/login/",
          method: "POST",
          header: "Content-Type:application/json",
          body: {
            mode: "application/json",
            raw: JSON.stringify({
              username: "{{USERNAME}}",
              password: "{{PASSWORD}}"
            })
          }
        };

        pm.sendRequest(getTokenRequest, function (err, res) {
          if (err === null) {
            var jsonData = res.json();
            pm.environment.set("REFRESH", jsonData.refresh);
            pm.environment.set("ACCESS", jsonData.access);
          }
        });
      },
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData[0].hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData[0].id);
        }
      }
    });

    postman[Request]({
      name: "Get a single crocodile",
      id: "e140b9f7-897f-4488-982a-bddafd05ab07",
      method: "GET",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}",
      auth(config, Var) {
        const address = new URI(config.address);
        address.username(`${pm[Var]("USERNAME")}`);
        address.password(`${pm[Var]("PASSWORD")}`);
        config.address = address.toString();
        config.options.auth = "basic";
      }
    });

    postman[Request]({
      name: "Create a new crocodile (max 100)",
      id: "0773277a-d329-43c3-9189-955adbe14c9f",
      method: "POST",
      address: "{{BASE_URL}}/my/crocodiles/",
      data: '{\n\t"name": "Crocodile1",\n\t"sex": "M",\n\t"date_of_birth": "2020-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Update your crocodile",
      id: "8adb955c-9167-4606-a892-a4ea3e132944",
      method: "PUT",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      data: '{\n\t"name": "Croc",\n\t"sex": "M",\n\t"date_of_birth": "2020-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Update selected fields on your crocodile",
      id: "bd3e3958-9f21-41cd-808b-2a7ae8103004",
      method: "PATCH",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      data: '{\n\t"date_of_birth": "2019-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Remove your crocodile",
      id: "62eb87f2-08d3-4b2b-a4c0-fc1f190179aa",
      method: "DELETE",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });
  });
}